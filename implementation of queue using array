package Queues;

public class queueUsingArray {
	
	private int data[];
	private int front; // index at which front element is stores 
	private int rear;  // index at which rear element is stored
	private int size; 

	public queueUsingArray() {
		
		data = new int[10];
		front=-1;
		rear=-1;
		size=0;
	}
	
	public queueUsingArray(int capacity) {
	
		data = new int[capacity];
		front=-1;
		rear=-1;
		size=0;
	}
	
	int size()
	{
		return size;
	}
	
	boolean isEmpty()
	{
		return size()==0;
	}
	
	int front() throws QueueEmptyException
	{
		if(size()==0)
		{
			throw new QueueEmptyException();
		}
		return data[front];
	}
	
	void enqueue(int element)
	{
		if(size==data.length)
		{
//			inc siez
		}
		
		if(size==0)
		{
			front=0;
		}
		size++;
		rear++;
		 
		if(rear == data.length)
		{
			rear = 0;
		}
		data[rear]=element;
	}
	
	int dequeue() throws QueueEmptyException  
	{
		if(size==0)
		{
			throw new QueueEmptyException();
		}
		
		int temp = data[front];
		front++;
		
		if(front == data.length)
		{
			front =0;
		}
		
		size--;
		
		if(size==0)
		{
			front=-1;
			rear=-1;
		}
		
		return temp;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
