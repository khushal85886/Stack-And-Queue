package stackAndQueues;

public class StackUsingLL<T> {

	private Node<T> head;
	private int size;
	
	public StackUsingLL() {
	head = null;
	size=0;
	}
	
	int size()
	{
		return size;
	}
	
	boolean isEmpty()
	{
		return size()==0;
	}
	
	T top() throws stackEmptyException
	{
		if(size()==0)
		{
			stackEmptyException e = new stackEmptyException();
			throw e;
		}
		
		return head.data;
	}
	
	void push(T elem)
	{
		Node<T> newNode = new Node<T>(elem);
		newNode.next=head;
		head=newNode;
		size++; 
	}
	
	T pop() throws stackEmptyException
	{
		if(size()==0)
		{
			throw new stackEmptyException();
		}
		
		T tempData=head.data;
		head=head.next;
		size--;
		
		return tempData;
	}
	
}
